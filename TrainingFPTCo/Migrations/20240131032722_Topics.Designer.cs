// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingFPTCo.DBContext;

#nullable disable

namespace TrainingFPTCo.Migrations
{
    [DbContext(typeof(TrainingDBContext))]
    [Migration("20240131032722_Topics")]
    partial class Topics
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrainingFPTCo.DBContext.CategoryDBContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("Varchar(MAX)")
                        .HasColumnName("Description");

                    b.Property<string>("NameCategory")
                        .IsRequired()
                        .HasColumnType("Varchar(50)")
                        .HasColumnName("NameCategory");

                    b.Property<int>("ParentId")
                        .HasColumnType("Integer")
                        .HasColumnName("ParentId");

                    b.Property<string>("PosterImage")
                        .IsRequired()
                        .HasColumnType("Varchar(MAX)")
                        .HasColumnName("PosterImage");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("Varchar(50)")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TrainingFPTCo.DBContext.CourseDBContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("Varchar(MAX)")
                        .HasColumnName("Description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("Varchar(MAX)")
                        .HasColumnName("Image");

                    b.Property<string>("LikeCourse")
                        .HasColumnType("Varchar(MAX)")
                        .HasColumnName("LikeCourse");

                    b.Property<string>("NameCourse")
                        .IsRequired()
                        .HasColumnType("Varchar(MAX)")
                        .HasColumnName("NameCourse");

                    b.Property<int?>("StarCourse")
                        .HasColumnType("Integer")
                        .HasColumnName("StarCourse");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("Varchar(200)")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("TrainingFPTCo.DBContext.RolesDBContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionRole")
                        .HasColumnType("Varchar(200)")
                        .HasColumnName("Description");

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasColumnType("Varchar(50)")
                        .HasColumnName("NameRole");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("Varchar(200)")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TrainingFPTCo.DBContext.TopicBDContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttachFile")
                        .IsRequired()
                        .HasColumnType("Varchar(MAX)")
                        .HasColumnName("AttachFile");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionRole")
                        .HasColumnType("Varchar(200)")
                        .HasColumnName("Description");

                    b.Property<string>("Documents")
                        .IsRequired()
                        .HasColumnType("Varchar(MAX)")
                        .HasColumnName("Documents");

                    b.Property<string>("NameTopic")
                        .IsRequired()
                        .HasColumnType("Varchar(200)")
                        .HasColumnName("NameTopic");

                    b.Property<string>("PoterTopic")
                        .IsRequired()
                        .HasColumnType("Varchar(50)")
                        .HasColumnName("PoterTopic");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("Varchar(200)")
                        .HasColumnName("Status");

                    b.Property<string>("TypeDocument")
                        .IsRequired()
                        .HasColumnType("Varchar(50)")
                        .HasColumnName("TypeDocument");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });
#pragma warning restore 612, 618
        }
    }
}
